<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_in_email_action">
    <sysevent_in_email_action action="INSERT_OR_UPDATE">
        <action>record_action</action>
        <active>true</active>
        <assignment_operator/>
        <condition_script/>
        <description/>
        <event_name>email.read</event_name>
        <filter_condition table="sys_email">recipientsLIKEcopperswitchoff@glide.co.uk^ORrecipientsLIKEAnnualBestTariff@Glide.co.uk^ORrecipientsLIKEEndOfContract@Glide.co.uk^EQ<item endquery="false" field="recipients" goto="false" newquery="false" operator="LIKE" or="false" value="copperswitchoff@glide.co.uk"/>
            <item endquery="false" field="recipients" goto="false" newquery="false" operator="LIKE" or="true" value="AnnualBestTariff@Glide.co.uk"/>
            <item endquery="false" field="recipients" goto="false" newquery="false" operator="LIKE" or="true" value="EndOfContract@Glide.co.uk"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <from/>
        <name>Retentions - New</name>
        <order>-895</order>
        <reply_email/>
        <required_roles/>
        <script><![CDATA[(function() {

	if (ignoreThisEmail())
		return;

    var subject = email.subject;

    //Assignment group sys_id:
    var clientRelationship = '0cda8e5f1bb629103329a86fe54bcbfc';

    var userId = gs.getUserID();
    var compID = ''; //to hold the company (customer).
    var locID = ''; //to hold the location.

    //Check if user record exists. If not, create one:
    var guest = '5136503cc611227c0183e96598c4f706';

    if (userId == guest) {

        var emailObj = email.from;

        var sysUser = new GlideRecord('sys_user');
        sysUser.newRecord();
        sysUser.u_user_type = 'C1 Customer';
        sysUser.user_name = 'g' + gs.generateGUID();
        sysUser.email = emailObj;
        sysUser.first_name = emailObj;
        userId = sysUser.insert();

        //Attempt to associate with a company:
        var domain = emailObj.replace(/.*@/, "");
        var company = false;
        var companyGR = new GlideRecord('core_company');
        companyGR.addQuery('u_email_domain', 'CONTAINS', domain);
        companyGR.query();
        while (companyGR.next()) {
            company = companyGR.getValue('sys_id');
        }
        if (company) {
            var m2m = new GlideRecord('u_m2m_companies_users2');
            m2m.newRecord();
            m2m.u_company = company;
            m2m.u_user = userId;
            m2m.insert();

            compID = company;
        }
    }

    //Populate company and location from the user object:
    if (userId != guest) {
        var user = gs.getUser();
        compID = user.getCompanyID() || '';
        //locID = user.getLocation() || ''; //DOES not work in Scoped apps! But getCompanyID does. :(
        var userGR = new GlideRecord('sys_user');
        userGR.get(userId);
        locID = userGR.getValue('location') || '';
    }

    //Populate company from m2m:
    if (!compID) {
        var m2m = new GlideRecord('u_m2m_companies_users2');
        m2m.addQuery('u_user', userId);
        m2m.setLimit(1);
        m2m.query();
        if (m2m.next())
            compID = m2m.getValue('u_company');
    }
    //Populate location from m2m:
    if (!locID) {
        var m2m = new GlideRecord('u_m2m_locations_users');
        m2m.addQuery('u_user', userId);
        m2m.setLimit(1);
        m2m.query();
        if (m2m.next())
            locID = m2m.getValue('u_location');
    }

    current.description = email.body_text;
    current.contact_type = "email";
    current.comments = "received from: " + email.origemail + "\n\n" + email.body_text;

    current.people = userId;
    current.opened_by = userId;
    current.company = compID;
    current.location = locID;
    current.assignment_group = clientRelationship;
    current.state = '1'; //New.

	var emailRecipients = email.recipients.toLowerCase();

    if (emailRecipients.includes('annualbesttariff@glide.co.uk')) {
        current.short_description = 'ABTN response/query';
        current.category = '1';
    } else if (email.recipients.includes('endofcontract@glide.co.uk')) {
        current.short_description = 'EOCN response/query';
        current.category = '2';
    } else if (email.recipients.includes('copperswitchoff@glide.co.uk')) {
        //Cab Refresh emails, will also come to this address. Delineate those from copper-stop-sell:
        if (subject.includes('Transitioning from Copper to Full-Fibre Services')) {
            current.short_description = 'Cab refresh response';
            current.category = '4';
        } else {
            current.short_description = 'Copper stop sell response';
            current.category = '3';
        }
    } else {
        current.short_description = email.origemail + ': ' + email.subject;
    }

    current.insert();

})();

function ignoreThisEmail(){
	var subject = (email.subject || '').toLowerCase();
	var body_text = (email.body_text || '').toLowerCase();
	var phrases = ['out of office', 'out of the office', 'annual leave'];
	var ignore = false;

	phrases.forEach(function(phrase){
		if (subject.includes(phrase))
			ignore = true;
		if (body_text.includes(phrase))
			ignore = true;
	});

	return ignore;
}]]></script>
        <stop_processing>true</stop_processing>
        <sys_class_name>sysevent_in_email_action</sys_class_name>
        <sys_created_by>jamie.wildish</sys_created_by>
        <sys_created_on>2023-07-29 15:57:10</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>05af974e1b10f990b0c9ed32b24bcbc0</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>Retentions - New</sys_name>
        <sys_overrides/>
        <sys_package display_value="Retentions" source="x_canl_emails_eocn">0b95ce931b8669d0b0c9ed32b24bcb73</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Retentions">0b95ce931b8669d0b0c9ed32b24bcb73</sys_scope>
        <sys_update_name>sysevent_in_email_action_05af974e1b10f990b0c9ed32b24bcbc0</sys_update_name>
        <sys_updated_by>jamie.wildish</sys_updated_by>
        <sys_updated_on>2024-02-20 11:59:03</sys_updated_on>
        <table>x_canl_emails_eocn_retentions_case</table>
        <template/>
        <type>new</type>
    </sysevent_in_email_action>
</record_update>
