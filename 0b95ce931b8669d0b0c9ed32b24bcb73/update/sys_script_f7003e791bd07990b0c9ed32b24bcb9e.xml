<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_canl_emails_eocn_customer_data</collection>
        <condition/>
        <description>Set the company and location from the customer reference (sold product name).&#13;
This will become defunct when we are populating this record from internal data, rather than from a data load.</description>
        <execute_function>false</execute_function>
        <filter_condition table="x_canl_emails_eocn_customer_data">customer_referenceVALCHANGES^customer_referenceISNOTEMPTY^EQ<item endquery="false" field="customer_reference" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="customer_reference" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Set Company and Location</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var customer_reference = current.getValue('customer_reference');

	var soldProdGR = new GlideRecord('sn_install_base_sold_product');
	soldProdGR.get('name', customer_reference);
	if (soldProdGR.isValidRecord()){
		current.location = soldProdGR.getValue('u_location') || '';
		if (current.location)
			current.account = current.location.u_managing_agent;
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>jamie.wildish</sys_created_by>
        <sys_created_on>2023-07-28 17:52:37</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f7003e791bd07990b0c9ed32b24bcb9e</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Set Company and Location</sys_name>
        <sys_overrides/>
        <sys_package display_value="Retentions" source="x_canl_emails_eocn">0b95ce931b8669d0b0c9ed32b24bcb73</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Retentions">0b95ce931b8669d0b0c9ed32b24bcb73</sys_scope>
        <sys_update_name>sys_script_f7003e791bd07990b0c9ed32b24bcb9e</sys_update_name>
        <sys_updated_by>jamie.wildish</sys_updated_by>
        <sys_updated_on>2024-01-02 14:52:04</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f7003e791bd07990b0c9ed32b24bcb9e"/>
</record_update>
